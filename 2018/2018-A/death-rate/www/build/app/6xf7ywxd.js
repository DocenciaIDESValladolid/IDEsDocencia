/*! Built with http://stenciljs.com */
const{h:t}=window.App;import{d as e,c as r,g as s,f as i,a}from"./chunk-68689d12.js";import{a as o,b as n}from"./chunk-5851a23a.js";import"./chunk-ee323282.js";const l="\nprecision highp float;\nuniform float u_time;\nuniform float u_y;\n\nvoid main() {\n    float a = sin(u_time*0.001 + gl_FragCoord.x * 0.004)*20.0 + u_y;\n    if(gl_FragCoord.y < a) {\n      gl_FragColor = vec4(0.945, 0.255, 0.251, 0.8);\n    } else {\n      gl_FragColor = vec4(0.945, 0.255, 0.251, 0.5);\n    }\n}\n";class h{constructor(){this.time=0,this.y=10,this.score=0}async componentDidLoad(){const t=await this.loadingCtrl.create({content:"localizando..."});await t.present();const{Map:s,Tile:a,OSM:l,View:h,proj:c}=await import("./maps.js");this.proj=c,this.map=new s({layers:[new a({source:new l})],controls:[],target:this.el.querySelector(".mapa"),view:new h({center:c.fromLonLat([-4.7061376,41.662351099999995]),zoom:15})});const d=await r(.1,2),g=await e(o,d,n),u=i(g);this.setScore(u),this.insertDeathRate(d,u),this.updateAddress(d),await t.dismiss()}async updateAddress(t){const e=await fetch(`https://nominatim.openstreetmap.org/reverse.php?format=json&lat=${t.lat}&lon=${t.log}&zoom=18`),r=await e.json();this.address=r.address,this.map.getView().setCenter(this.proj.fromLonLat([t.log,t.lat]))}setScore(t){this.y=this.score=Math.floor(t)}async insertDeathRate(t,e){const r={name:a("nombre")||"unknown",deathRate:e,coord:t};s("/geoserver",r)}render(){this.score>0&&requestAnimationFrame(t=>{this.time=t});const e=20*Math.sin(.001*this.time)+this.y;return[t("ion-header",null,t("ion-toolbar",{color:"dark"},t("ion-buttons",{slot:"start"},t("ion-menu-toggle",null,t("ion-button",null,t("ion-icon",{name:"menu",slot:"icon-only"})))),t("ion-title",null,"Tu localizaciÃ³n")),this.address&&t("ion-toolbar",{color:"dark"},t("div",{class:"address"},t("p",null,this.address.road),t("p",null,this.address.county,", ",this.address.postcode),t("p",null,this.address.country)))),t("ion-content",{scrollEnabled:!1},t("div",{class:"mapa"}),this.score>0&&t("pro-glshader",{class:"blood-shader",frag:l,uniforms:{"1f:u_time":this.time,"1f:u_y":this.y}},t("div",{class:"rate",style:{transform:`translateY(-${e}px`}},t("div",{class:"line"}),t("div",{class:"score"},this.score))))]}static get is(){return"death-page"}static get properties(){return{address:{state:!0},el:{elementRef:!0},loadingCtrl:{connect:"ion-loading-controller"},score:{state:!0},time:{state:!0},y:{state:!0}}}static get style(){return"death-page ion-content .scroll-inner{height:100%}death-page .mapa{height:100%;width:100%;z-index:-1}death-page .death-container{width:100%;height:55%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}death-page .address{margin:10px 0 10px 20px;letter-spacing:1px;padding-left:10px;font-family:Helvetica Neue;font-size:24px;font-weight:500;border-left:9px solid #fff;color:#fff}death-page .address p{margin:2px 0 0}death-page .blood-shader{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1}death-page .rate{will-change:transform;position:absolute;bottom:-65px;left:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;mix-blend-mode:color-dodge;width:50%}death-page .rate>div{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}death-page .rate .score{font-family:Lobster,cursive;font-size:105px;text-align:center;color:#fff;mix-blend-mode:inherit}death-page .rate .line{height:5px;margin-right:10px;background:#fff;mix-blend-mode:inherit}"}}const c="attribute vec2 a_position;\nvoid main() {gl_Position = vec4(a_position, 0, 1);}",d="void main() {gl_FragColor = vec4(0, 0, 0, 1);}";class g{constructor(){this.enabled=!0,this.ready=!0,this.vert=c,this.retina=!1,this.frag=d,this.uniforms={}}shaderChanged(){this.compileShader(),this.resolveUniforms(),this.renderGL()}uniformsChanged(){this.resolveUniforms(),this.renderGL()}componentDidLoad(){if(!this.isServer)return this.canvas=this.el.querySelector("canvas"),this.resize(),(this.gl=this.canvas.getContext("webgl"))?(this.initGL(),this.compileShader(),this.resolveUniforms(),void this.renderGL()):(console.warn("webgl is not available"),this.canvas=null,void(this.enabled=!1))}resize(){const t=this.canvas;if(!t)return;const e=this.retina?window.devicePixelRatio:1,r=t.clientWidth*e,s=t.clientHeight*e;t.width===r&&t.height===s||(t.width=r,t.height=s,this.gl&&this.gl.viewport(0,0,this.gl.drawingBufferWidth,this.gl.drawingBufferHeight))}resolveUniforms(){const t=this.gl;if(!t)return;const e=this.uniforms,r=Object.keys(e);t.useProgram(this.glProgram);for(let s of r){const[r,i]=s.split(":",2),a=t.getUniformLocation(this.glProgram,i),o=e[s];t["uniform"+r](a,o)}}initGL(){const t=this.gl;if(!t)return;t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight);const e=this.glPosBuffer=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e);const r=new Float32Array([1,1,-1,1,1,-1,-1,-1]);t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW)}compileShader(){const t=this.gl;if(!t)return;const e=t.createShader(t.VERTEX_SHADER);t.shaderSource(e,this.vert),t.compileShader(e);const r=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(r,this.frag),t.compileShader(r);const s=this.glProgram=t.createProgram();t.attachShader(s,e),t.attachShader(s,r),t.linkProgram(s)}renderGL(){const t=this.gl;if(!t)return;if(!this.ready)return t.clearColor(.03,.05,.07,1),t.clear(t.COLOR_BUFFER_BIT),void t.flush();t.bindBuffer(t.ARRAY_BUFFER,this.glPosBuffer);const e=t.getAttribLocation(this.glProgram,"a_position");t.enableVertexAttribArray(e),t.vertexAttribPointer(e,2,t.FLOAT,!1,0,0),t.useProgram(this.glProgram),t.drawArrays(t.TRIANGLE_STRIP,0,4)}render(){return this.enabled?(this.resize(),t("canvas",null)):null}static get is(){return"pro-glshader"}static get properties(){return{el:{elementRef:!0},enabled:{state:!0},frag:{type:String,attr:"frag",watchCallbacks:["shaderChanged"]},isServer:{context:"isServer"},media:{type:String,attr:"media"},ready:{type:Boolean,attr:"ready"},retina:{type:Boolean,attr:"retina"},uniforms:{type:"Any",attr:"uniforms",watchCallbacks:["uniformsChanged"]},vert:{type:String,attr:"vert",watchCallbacks:["shaderChanged"]}}}static get style(){return"pro-glshader{display:block;width:100%;height:100%}pro-glshader canvas{width:100%;height:100%}"}}export{h as DeathPage,g as ProGlshader};